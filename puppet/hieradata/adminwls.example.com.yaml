---
messageEnv: 'admin'

orawls::weblogic::log_output:   true

logoutput:                     &logoutput                     true

hosts:
  'puppet.grahamgilbert.dev':
    ip:                "10.10.10.2"
    host_aliases:      'puppet'
  'adminwls.example.com':
    ip:                "10.10.10.20"
    host_aliases:      'adminwls'
  'nodewls1.example.com':
    ip:                "10.10.10.100"
    host_aliases:      'nodewls1'
  'nodewls2.example.com':
    ip:                "10.10.10.200"
    host_aliases:      'nodewls2'
  'localhost':
    ip:                "127.0.0.1"
    host_aliases:      'localhost.localdomain,localhost4,localhost4.localdomain4'

orautils::nodeMgrAddressParam:    '10.10.10.20'


# when you have just one domain on a server
domain_name:                "Wls1036"
domain_adminserver:         "AdminServer"
domain_adminserver_address: "10.10.10.20"
domain_adminserver_port:    7001
domain_nodemanager_port:    5556
domain_wls_password:        "weblogic1"
domain_user_config_file:    "/home/oracle/oracle-Wls1036-WebLogicConfig.properties"
domain_user_key_file:       "/home/oracle/oracle-Wls1036-WebLogicKey.properties"


wls_os_user:              &wls_os_user              "oracle"
wls_weblogic_user:        &wls_weblogic_user        "weblogic"
wls_weblogic_home_dir:    &wls_weblogic_home_dir    "/opt/oracle/middleware11g/wlserver_10.3"
wls_middleware_home_dir:  &wls_middleware_home_dir  "/opt/oracle/middleware11g"



# create a standard domain
domain_instances:
  'wlsDomain':
     domain_template:          "standard"
     development_mode:         false
     log_output:               *logoutput


wls_setting_instances:
  'default':
    user:               *wls_os_user
    weblogic_home_dir:  *wls_weblogic_home_dir
    connect_url:        "t3://10.10.10.20:7001"
    weblogic_user:      *wls_weblogic_user
    weblogic_password:  *domain_wls_password
    require:            Orawls::Domain[wlsDomain]

# pack domains
pack_domain_instances:
  'wlsDomain':
     log_output:               *logoutput

# create and startup the nodemanager
nodemanager_instances:
  'nodemanager':
     log_output:           *logoutput
     nodemanager_address:  "10.10.10.20"


# startup adminserver for extra configuration
control_instances:
  'startWLSAdminServer':
     domain_name:          "Wls1036"
     server_type:          'admin'
     target:               'Server'
     server:               'AdminServer'
     action:               'start'
     log_output:           *logoutput

# create password file for WLST utility
userconfig_instances:
  'Wls1036':
     log_output:           *logoutput
     user_config_dir:      '/home/oracle'

# create 2 machines
machines_instances:
  'Node1':
    ensure:         'present'
    listenaddress:  '10.10.10.100'
    listenport:     '5556'
    machinetype:    'UnixMachine'
    nmtype:         'SSL'
  'Node2':
    ensure:         'present'
    listenaddress:  '10.10.10.200'
    listenport:     '5556'
    machinetype:    'UnixMachine'
    nmtype:         'SSL'

server_instances:
      'wlsServer1':
         ensure:                         'present'
         arguments:                      '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer1.out -Dweblogic.Stderr=/data/logs/wlsServer1_err.out'
         listenaddress:                  '10.10.10.100'
         listenport:                     '8001'
         logfilename:                    '/data/logs/wlsServer1.log'
         machine:                        'Node1'
         sslenabled:                     '1'
         ssllistenport:                  '8201'
         sslhostnameverificationignored: '1'
         jsseenabled:                    '1'
         require:                        Wls_machine[Node1]
      'wlsServer2':
         ensure:                         'present'
         arguments:                      '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer2.out -Dweblogic.Stderr=/data/logs/wlsServer2_err.out'
         listenport:                     '8001'
         logfilename:                    '/data/logs/wlsServer2.log'
         machine:                        'Node2'
         sslenabled:                     '1'
         ssllistenport:                  '8201'
         sslhostnameverificationignored: '1'
         listenaddress:                  '10.10.10.200'
         jsseenabled:                    '1'
         require:                        Wls_machine[Node2]
      'wlsServer3':
         ensure:                         'present'
         arguments:                      '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer3.out -Dweblogic.Stderr=/data/logs/wlsServer3_err.out'
         listenaddress:                  '10.10.10.100'
         listenport:                     '8002'
         logfilename:                    '/data/logs/wlsServer3.log'
         machine:                        'Node1'
         sslenabled:                     '1'
         ssllistenport:                  '8202'
         sslhostnameverificationignored: '1'
         jsseenabled:                    '1'
         require:                        Wls_machine[Node1]
      'wlsServer4':
         ensure:                         'present'
         arguments:                      '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer4.out -Dweblogic.Stderr=/data/logs/wlsServer4_err.out'
         listenaddress:                  '10.10.10.200'
         listenport:                     '8002'
         logfilename:                    '/data/logs/wlsServer4.log'
         machine:                        'Node2'
         sslenabled:                     '1'
         ssllistenport:                  '8202'
         sslhostnameverificationignored: '1'
         jsseenabled:                    '1'
         require:                        Wls_machine[Node2]



cluster_instances:
    'WebCluster':
        ensure:         'present'
        messagingmode:  'unicast'
        migrationbasis: 'consensus'
        servers:
          - 'wlsServer1'
          - 'wlsServer2'
        require:
          - Wls_server[wlsServer1]
          - Wls_server[wlsServer2]
    'WebCluster2':
        ensure:         'present'
        messagingmode:  'unicast'
        migrationbasis: 'consensus'
        servers:
          - 'wlsServer3'
          - 'wlsServer4'
        require:
          - Wls_server[wlsServer3]
          - Wls_server[wlsServer4]

file_persistence_folders:
   '/opt/oracle/wlsdomains/domains/Wls1036/persistence1':
      ensure:     directory
      recurse:    false
      replace:    false
      mode:       '0775'
      owner:      'oracle'
      group:      'dba'
   '/opt/oracle/wlsdomains/domains/Wls1036/persistence2':
      ensure:     directory
      recurse:    false
      replace:    false
      mode:       '0775'
      owner:      'oracle'
      group:      'dba'

file_persistence_store_instances:
  'jmsFile1':
    ensure:         'present'
    directory:      'persistence1'
    target:
      - 'wlsServer1'
    targettype:
      - 'Server'
    require:
      - Wls_server[wlsServer1]
      - File[/opt/oracle/wlsdomains/domains/Wls1036/persistence1]
  'jmsFile2':
    ensure:         'present'
    directory:      'persistence2'
    target:
      - 'wlsServer2'
    targettype:
      - 'Server'
    require:
      - Wls_server[wlsServer2]
      - File[/opt/oracle/wlsdomains/domains/Wls1036/persistence2]

jmsserver_instances:
  'jmsServer1':
     ensure:              'present'
     target:
       - 'wlsServer1'
     targettype:
       - 'Server'
     persistentstore:     'jmsFile1'
     persistentstoretype: 'FileStore'
     require:
       - Wls_server[wlsServer1]
       - Wls_file_persistence_store[jmsFile1]
  'jmsServer2':
     ensure:              'present'
     target:
       - 'wlsServer2'
     targettype:
       - 'Server'
     require:             Wls_server[wlsServer2]


jms_module_instances:
   'jmsClusterModule':
     ensure:      'present'
     target:
       - 'WebCluster'
     targettype:
       - 'Cluster'
     require:     Wls_cluster[WebCluster]

jms_subdeployment_instances:
   'jmsClusterModule:jmsServers':
      ensure:     'present'
      target:
        - 'jmsServer1'
        - 'jmsServer2'
      targettype:
        - 'JMSServer'
        - 'JMSServer'
      require:
        - Wls_jms_module[jmsClusterModule]
        - Wls_jmsserver[jmsServer1]
        - Wls_jmsserver[jmsServer2]
   'jmsClusterModule:wlsServers':
      ensure:     'present'
      target:
        - 'WebCluster'
      targettype:
        - 'Cluster'
      require:
        - Wls_jms_module[jmsClusterModule]
        - Wls_cluster[WebCluster]

jms_connection_factory_instances:
  'jmsClusterModule:cf':
    ensure:             'present'
    jmsmodule:          'jmsClusterModule'
    defaulttargeting:   '0'
    jndiname:           'jms/cf'
    subdeployment:      'wlsServers'
    transactiontimeout: '3600'
    xaenabled:          '0'
    require:
      - Wls_jms_module[jmsClusterModule]
      - Wls_jms_subdeployment[jmsClusterModule:wlsServers]
  'jmsClusterModule:cf2':
    ensure:             'present'
    jmsmodule:          'jmsClusterModule'
    defaulttargeting:   '1'
    jndiname:           'jms/cf2'
    transactiontimeout: '3600'
    xaenabled:          '1'
    require:            Wls_jms_module[jmsClusterModule]

jms_queue_instances:
   'jmsClusterModule:ErrorQueue':
     ensure:                   'present'
     distributed:              '1'
     expirationpolicy:         'Discard'
     jndiname:                 'jms/ErrorQueue'
     redeliverydelay:          '-1'
     redeliverylimit:          '-1'
     subdeployment:            'jmsServers'
     defaulttargeting:         '0'
     timetodeliver:            '-1'
     timetolive:               '-1'
     require:
       - Wls_jms_module[jmsClusterModule]
       - Wls_jms_subdeployment[jmsClusterModule:jmsServers]
   'jmsClusterModule:Queue1':
     ensure:                   'present'
     distributed:              '1'
     errordestination:         'ErrorQueue'
     expirationpolicy:         'Redirect'
     jndiname:                 'jms/Queue1'
     redeliverydelay:          '2000'
     redeliverylimit:          '3'
     subdeployment:            'jmsServers'
     defaulttargeting:         '0'
     timetodeliver:            '-1'
     timetolive:               '300000'
     require:
       - Wls_jms_module[jmsClusterModule]
       - Wls_jms_subdeployment[jmsClusterModule:jmsServers]
       - Wls_jms_queue[jmsClusterModule:ErrorQueue]
   'jmsClusterModule:Queue2':
     ensure:                   'present'
     distributed:              '1'
     expirationloggingpolicy:  '%header%%properties%'
     expirationpolicy:         'Log'
     jndiname:                 'jms/Queue2'
     redeliverydelay:          '2000'
     redeliverylimit:          '3'
     subdeployment:            'jmsServers'
     defaulttargeting:         '0'
     timetodeliver:            '-1'
     timetolive:               '300000'
     require:
       - Wls_jms_module[jmsClusterModule]
       - Wls_jms_subdeployment[jmsClusterModule:jmsServers]


jms_topic_instances:
   'jmsClusterModule:Topic1':
     ensure:            'present'
     defaulttargeting:  '0'
     distributed:       '1'
     expirationpolicy:  'Discard'
     jndiname:          'jms/Topic1'
     redeliverydelay:   '2000'
     redeliverylimit:   '2'
     subdeployment:     'jmsServers'
     timetodeliver:     '-1'
     timetolive:        '300000'
     require:
       - Wls_jms_module[jmsClusterModule]
       - Wls_jms_subdeployment[jmsClusterModule:jmsServers]


